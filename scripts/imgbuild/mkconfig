#!/bin/bash

#echo "$1 $2 $3 $4 $5 $6 $7 $8 $9 ${10} ${11} ${12} ${13} ${14} ${15} ${16} ${17} ${18}"
#echo "parameter: $#"
STARTPWD=`pwd`

if [ "$#" != "26" ]
then
	echo "$0 type ip dhcp-start dhcp-limit nickname fullname mail lon lat dest"
	echo "type: dir300 or fonera"
	echo "ip: z.B. 10.18.1.15"
	echo "subnetmask: 255.255.255.0"
	echo "dhcp-start: z.B. 50"
	echo "dhcp-limit: z.B. 4 (50-54)"
	echo "location"
	echo "longitude"
	echo "latitude"
	echo "essid"
	echo "bssid"
	echo "channel"
	echo "nickname: RedDog"
	echo "fullname: \"Tim Niemeyer\""
	echo "mail: tim@freifunk-ol.de"
	echo "prefix";
	echo "community_name";
	echo "website";
	echo "dest: build_path mkconfig"
	exit 0
fi

TYPE=${1^^}
IP=$2
NMASK=$3
DHCPS=$4
DHCPL=$5
LOCATION=$6
LON=$7
LAT=$8
SSID=$9
BSSID=${10}
CHANNEL=${11}
NICKNAME=${12}
FULLNAME=${13}
MAIL=${14}
PREFIX=${15}
CNAME=${16}
CWEBSITE=${17}

MKVPN=${18}
VPNSERVER=${19}
VPNPORT=${20}
VPNDEV=${21}
VPNPROTO=${22}
VPNCACRT=${23}
VPNCLCRT=${24}
VPNCLKEY=${25}

DEST=${26}/etc

if [ "$TYPE" = "FONERA" ]
then
WANDEV=eth0
else
WANDEV=eth0.2
fi 

cat > $DEST/firewall.user <<EOF
# This file is interpreted as shell script.
# Put your custom iptables rules here, they will
# be executed with each firewall (re-)start.

iptables -t nat -F
iptables -P INPUT DROP
iptables -P OUTPUT DROP
iptables -P FORWARD DROP

INTERFACE_ACCEPT="ath0 wifi0 tap0"

iptables -A INPUT -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

for int in \$INTERFACE_ACCEPT
do
	iptables -A INPUT -i \$int -j ACCEPT
	iptables -A OUTPUT -o \$int -j ACCEPT
	for ext in \$INTERFACE_ACCEPT
	do
		iptables -A FORWARD -i \$int -o \$ext -j ACCEPT
	done
done

INTERFACE_REJECT="$WANDEV"

for int in \$INTERFACE_REJECT
do
	# Verbindung zum VPN-GW O
	iptables -A OUTPUT -o \$int -p $VPNPROTO -d $VPNSERVER --dport $VPNPORT -j ACCEPT
	iptables -A INPUT -i \$int -p $VPNPROTO -s $VPNSERVER --sport $VPNPORT -j ACCEPT
	# ICMP zum VPN-GW OK
	iptables -A OUTPUT -o \$int -p icmp -d $VPNSERVER -j ACCEPT
	iptables -A INPUT -i \$int -p icmp -s $VPNSERVER -j ACCEPT
	# Verbindung Ã¼ber SSH
	iptables -A OUTPUT -o \$int -p tcp -m state --state ESTABLISHED,RELATED --sport 22 -j ACCEPT
	iptables -A INPUT -i \$int -p tcp --dport 22 -j ACCEPT
	# Alles andere auf eth0.0 weg!                                          
	iptables -A INPUT -i \$int -j REJECT
	iptables -A OUTPUT -o \$int -j REJECT
	iptables -A FORWARD -i \$int -j REJECT
	iptables -A FORWARD -o \$int -j REJECT
done


EOF

cp src/config/* $DEST/config/

if [ "$MKVPN" != "false" ]
then

cat > $DEST/config/openvpn <<EOF
package openvpn

config openvpn client
option enable 1
option client 1

option dev $VPNDEV
option proto $VPNPROTO
list remote "$VPNSERVER $VPNPORT"

option resolv_retry infinite
option nobind 1
option persist_key 1
option persist_tun 1

option ca /etc/config/ca.crt
option cert /etc/config/client.crt
option key /etc/config/client.key

option comp_lzo 1
option verb 3

EOF

cat > $DEST/config/ca.crt <<EOF
$VPNCACRT
EOF

cat > $DEST/config/client.crt <<EOF
$VPNCLCRT
EOF

cat > $DEST/config/client.key <<EOF
$VPNCLKEY
EOF

fi

cat > $DEST/config/dhcp <<EOF
config dnsmasq
	option domainneeded 1
	option boguspriv  1
	option filterwin2k  '0'  #enable for dial on demand
	option localise_queries 1
	option local  '/olsr/'
	option domain 'olsr'
	option expandhosts  1
	option nonegcache 0
	option authoritative  1
	option readethers 1
	option leasefile  '/tmp/dhcp.leases'
	option resolvfile '/tmp/resolv.conf.auto'
	list addnhosts '/var/etc/hosts.olsr'
	#list server    '/mycompany.local/1.2.3.4'
	#option nonwildcard 0
	#list interface   br-lan

config dhcp wan
	option interface  wan
	option ignore 1

config 'dhcp' 'wifi0'
	option 'limit' '$DHCPL'
	option 'leasetime' '10m'
	option 'force' '1'
	option 'interface' 'wifi0'
	option 'start' '$DHCPS'
	option 'netmask' '$NMASK'

#config 'dhcp' 'lan'
#  option 'limit' 'x'
#  option 'leasetime' '10m'
#  option 'force' '1'
#  option 'interface' 'lan'
#  option 'start' 'x'
#  option 'netmask'
#  '255.255.255.0'
EOF

cat > $DEST/config/freifunk <<EOF
config settings wizard
config public contact
	option nickname '$NICKNAME'
	option name '$FULLNAME'
	option mail '$MAIL'
	option phone ''
	option location '$LOCATION'
	option note ''

config public community
        option 'name' '$CNAME'
        option 'homepage' '$CWEBSITE'
        option 'ssid' '$SSID'
        option 'prefix' '$PREFIX'

config fw_rule icmp
	option src freifunk
	option target ACCEPT
	option proto  icmp

config fw_rule http
	option src freifunk
	option target ACCEPT
	option proto  tcp
	option dest_port 80

config fw_rule https
	option src freifunk
	option target ACCEPT
	option proto  tcp
	option dest_port 443

config fw_rule ssh
	option src freifunk
	option target ACCEPT
	option proto  tcp
	option dest_port 22

config fw_rule olsr
	option src freifunk
	option target ACCEPT
	option proto  udp
	option dest_port 698

config fw_forwarding lan
	option src lan
	option dest freifunk

config fw_forwarding fffwd
	option src freifunk
	option dest freifunk

config defaults wifi_device
	option channel   $CHANNEL
	option diversity 1
	option disabled  0
	option txpower   17

config defaults wifi_iface
	option mode         adhoc
	option bssid    $BSSID
	option sw_merge 1

config defaults interface
	option netmask  255.0.0.0
	option dns      "88.198.178.18 212.204.49.83 208.67.220.220 208.67.222.222 10.18.0.1"

config defaults alias
	option netmask  255.255.255.0

config defaults dhcp
	option leasetime 30m

config defaults olsr_interface
	option Ip4Broadcast 255.255.255.255

config defaults time
	option rdate_servers "128.138.140.44 171.64.7.77 171.64.7.99 81.169.154.44 130.133.1.10"

config community oldenburg
	option name "Freifunk Oldenburg"
	option homepage http://www.freifunk-ol.de
	option ssid "oldenburg.freifunk.net"
	option prefix "10.18"
EOF

cat > $DEST/config/wireless <<EOF
config 'wifi-device' 'wifi0'
        option 'type' 'atheros'
        option 'channel' '$CHANNEL'
        option 'diversity' '0'
        option 'disabled' '0'

config 'wifi-iface'
        option 'device' 'wifi0'
        option 'network' 'wifi0'
        option 'encryption' 'none'
        option 'ssid' '$SSID'
        option 'mode' 'adhoc'
        option 'bssid' '$BSSID'

EOF

cat > $DEST/config/network <<EOF
config interface loopback
	option ifname   lo
	option proto    static
	option ipaddr   127.0.0.1
	option netmask  255.0.0.0

EOF

if [ "$TYPE" != "FONERA" ]
then
cat >> $DEST/config/network <<EOF
config 'switch' 'eth0'
	option 'reset' '1'
	option 'enable_vlan' '1'

config 'switch_vlan' 'eth0_1'
	option 'device' 'eth0'
	option 'vlan' '1'
	option 'ports' '0 1 2 3 5t'

config 'switch_vlan' 'eth0_2'
	option 'device' 'eth0'
	option 'vlan' '2'
	option 'ports' '4 5t'

EOF
fi
cat >> $DEST/config/network <<EOF
config interface wifi0
	option ifname   'ath0'
	option proto    static
	option ipaddr   $IP
	option netmask  $NMASK
	option dns      "88.198.178.18 212.204.49.83 208.67.220.220 208.67.222.222 10.18.0.1"

config 'interface' 'vpn'
	option 'proto' 'none'
	option 'ifname' 'tap0'

config interface wan
	option ifname   $WANDEV
	option 'dns' '88.198.178.18 212.204.49.83 208.67.220.220 208.67.222.222 10.18.0.1'
	option proto    dhcp

config 'route'                         
	option 'interface' 'wan'
	option 'target' '80.255.7.201'
EOF

cat > $DEST/config/system <<EOF
config system
	option hostname `echo $IP | sed 's/\./-/g'`
	option timezone 'CET-1CEST,M3.5.0,M10.5.0/3'
	option 'longitude' '$LON'
	option 'latitude' '$LAT'

config button
	option button   reset
	option action   released
	option handler  "logger reboot"
	option min              0
	option max              4

config button
	option button   reset
	option action   released
	option handler  "logger factory default"
	option min              5
	option max              30
EOF


